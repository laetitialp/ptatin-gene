/*
  Auto generated by version 0.0 of swarm_class_generator.py
  on DESKTOP-4R168SI, at 2022-06-30 09:49:44.399442 by tony
*/

#ifndef __MPntPChrono_DEF_H__
#define __MPntPChrono_DEF_H__

#include <mpi.h>

typedef struct {
 float age120;
 float age350;
 float age800;
 float Tmax;
} MPntPChrono;

typedef enum {
  MPPChrono_age120 = 0,
  MPPChrono_age350,
  MPPChrono_age800,
  MPPChrono_Tmax
} MPntPChronoTypeName;

extern const char MPntPChrono_classname[];

extern const int MPntPChrono_nmembers;

extern const size_t MPntPChrono_member_sizes[];

extern const char *MPntPChrono_member_names[];

extern MPI_Datatype MPI_MPNTPCHRONO;

/* prototypes */
void MPntPChronoGetField_age120(MPntPChrono *point,float *data);
void MPntPChronoGetField_age350(MPntPChrono *point,float *data);
void MPntPChronoGetField_age800(MPntPChrono *point,float *data);
void MPntPChronoGetField_Tmax(MPntPChrono *point,float *data);
void MPntPChronoSetField_age120(MPntPChrono *point,float data);
void MPntPChronoSetField_age350(MPntPChrono *point,float data);
void MPntPChronoSetField_age800(MPntPChrono *point,float data);
void MPntPChronoSetField_Tmax(MPntPChrono *point,float data);
void MPntPChronoView(MPntPChrono *point);
void MPntPChronoVTKWriteAsciiAllFields(FILE *vtk_fp,const int N,const MPntPChrono points[]);
void MPntPChronoPVTUWriteAllPPointDataFields(FILE *vtk_fp);
void MPntPChronoVTKWriteBinaryAppendedHeaderAllFields(FILE *vtk_fp,int *offset,const int N,const MPntPChrono points[]);
void MPntPChronoVTKWriteBinaryAppendedDataAllFields(FILE *vtk_fp,const int N,const MPntPChrono points[]);
int MPntPChronoCreateMPIDataType(MPI_Datatype *ptype);

#endif
