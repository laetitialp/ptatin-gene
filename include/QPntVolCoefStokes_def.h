/*
  Auto generated by version 0.0 of swarm_class_generator.py
  on DESKTOP-S1BGS4R, at 2023-05-23 11:09:43.730861 by tony
*/

#ifndef __QPntVolCoefStokes_DEF_H__
#define __QPntVolCoefStokes_DEF_H__

#include <mpi.h>

typedef struct {
 double eta;
 double rho;
 double Fu[3];
 double Fp;
 double gravity_vector[3];
} QPntVolCoefStokes;

typedef enum {
  QPVCStk_eta_effective = 0,
  QPVCStk_rho_effective,
  QPVCStk_momentum_rhs,
  QPVCStk_continuity_rhs,
  QPVCStk_gravity_vector
} QPntVolCoefStokesTypeName;

extern const char QPntVolCoefStokes_classname[];

extern const int QPntVolCoefStokes_nmembers;

extern const size_t QPntVolCoefStokes_member_sizes[];

extern const char *QPntVolCoefStokes_member_names[];

extern MPI_Datatype MPI_QPNTVOLCOEFSTOKES;

/* prototypes */
void QPntVolCoefStokesGetField_eta_effective(QPntVolCoefStokes *point,double *data);
void QPntVolCoefStokesGetField_rho_effective(QPntVolCoefStokes *point,double *data);
void QPntVolCoefStokesGetField_momentum_rhs(QPntVolCoefStokes *point,double *data[]);
void QPntVolCoefStokesGetField_continuity_rhs(QPntVolCoefStokes *point,double *data);
void QPntVolCoefStokesGetField_gravity_vector(QPntVolCoefStokes *point,double *data[]);
void QPntVolCoefStokesSetField_eta_effective(QPntVolCoefStokes *point,double data);
void QPntVolCoefStokesSetField_rho_effective(QPntVolCoefStokes *point,double data);
void QPntVolCoefStokesSetField_momentum_rhs(QPntVolCoefStokes *point,double data[]);
void QPntVolCoefStokesSetField_continuity_rhs(QPntVolCoefStokes *point,double data);
void QPntVolCoefStokesSetField_gravity_vector(QPntVolCoefStokes *point,double data[]);
void QPntVolCoefStokesView(QPntVolCoefStokes *point);
void QPntVolCoefStokesVTKWriteAsciiAllFields(FILE *vtk_fp,const int N,const QPntVolCoefStokes points[]);
void QPntVolCoefStokesPVTUWriteAllPPointDataFields(FILE *vtk_fp);
void QPntVolCoefStokesVTKWriteBinaryAppendedHeaderAllFields(FILE *vtk_fp,int *offset,const int N,const QPntVolCoefStokes points[]);
void QPntVolCoefStokesVTKWriteBinaryAppendedDataAllFields(FILE *vtk_fp,const int N,const QPntVolCoefStokes points[]);
int QPntVolCoefStokesCreateMPIDataType(MPI_Datatype *ptype);

#endif
