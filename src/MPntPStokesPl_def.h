


/*
  Auto generated by version 0.0 of swarm_class_generator.py
  on les-MacBook-Pro.local, at 2013-02-06 19:54:18.691970 by laetitia
*/


#ifndef __MPntPStokesPl_DEF_H__
#define __MPntPStokesPl_DEF_H__

typedef struct {
  float e_plastic ;
  short is_yielding ;
} MPntPStokesPl ;


typedef enum {
  MPPStkPl_plastic_strain = 0,
  MPPStkPl_yield_indicator
} MPntPStokesPlTypeName ;


extern const char MPntPStokesPl_classname[];

extern const int MPntPStokesPl_nmembers;

extern const size_t MPntPStokesPl_member_sizes[];

extern const char *MPntPStokesPl_member_names[];

/* prototypes */
void MPntPStokesPlGetField_plastic_strain(MPntPStokesPl *point,float *data);
void MPntPStokesPlGetField_yield_indicator(MPntPStokesPl *point,short *data);
void MPntPStokesPlSetField_plastic_strain(MPntPStokesPl *point,float data);
void MPntPStokesPlSetField_yield_indicator(MPntPStokesPl *point,short data);
void MPntPStokesPlView(MPntPStokesPl *point);
void MPntPStokesPlVTKWriteAsciiAllFields(FILE *vtk_fp,const int N,const MPntPStokesPl points[]);
void MPntPStokesPlPVTUWriteAllPPointDataFields(FILE *vtk_fp);
void MPntPStokesPlVTKWriteBinaryAppendedHeaderAllFields(FILE *vtk_fp,int *offset,const int N,const MPntPStokesPl points[]);
void MPntPStokesPlVTKWriteBinaryAppendedDataAllFields(FILE *vtk_fp,const int N,const MPntPStokesPl points[]);

#endif
