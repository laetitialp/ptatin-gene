


/*
  Auto generated by version 0.0 of swarm_class_generator.py
  on otsu.local, at 2012-02-13 00:08:18.106542 by dmay
*/


#ifndef __MPntPStokes_DEF_H__
#define __MPntPStokes_DEF_H__

typedef struct {
  double eta ;
  double rho ;
} MPntPStokes ;


typedef enum {
  MPPStk_eta_effective = 0,
  MPPStk_density
} MPntPStokesTypeName ;


extern const char MPntPStokes_classname[];

extern const int MPntPStokes_nmembers;

extern const size_t MPntPStokes_member_sizes[];

extern const char *MPntPStokes_member_names[];

/* prototypes */
void MPntPStokesGetField_eta_effective(MPntPStokes *point,double *data);
void MPntPStokesGetField_density(MPntPStokes *point,double *data);
void MPntPStokesSetField_eta_effective(MPntPStokes *point,double data);
void MPntPStokesSetField_density(MPntPStokes *point,double data);
void MPntPStokesView(MPntPStokes *point);
void MPntPStokesVTKWriteAsciiAllFields(FILE *vtk_fp,const int N,const MPntPStokes points[]);
void MPntPStokesPVTUWriteAllPPointDataFields(FILE *vtk_fp);
void MPntPStokesVTKWriteBinaryAppendedHeaderAllFields(FILE *vtk_fp,int *offset,const int N,const MPntPStokes points[]);
void MPntPStokesVTKWriteBinaryAppendedDataAllFields(FILE *vtk_fp,const int N,const MPntPStokes points[]);

#endif
