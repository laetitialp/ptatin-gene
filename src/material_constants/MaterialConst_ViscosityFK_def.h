/*
  Auto generated by version 0.0 of swarm_class_generator.py
  on les-MacBook-Pro.local, at 2013-03-08 17:43:59.344551 by laetitia
*/


#ifndef __MaterialConst_ViscosityFK_DEF_H__
#define __MaterialConst_ViscosityFK_DEF_H__

typedef struct {
  double eta0 ;
  double theta ;
} MaterialConst_ViscosityFK ;


typedef enum {
  ViscosityFK_eta0 = 0,
  ViscosityFK_theta
} MaterialConst_ViscosityFKTypeName ;


extern const char MaterialConst_ViscosityFK_classname[];

extern const int MaterialConst_ViscosityFK_nmembers;

extern const size_t MaterialConst_ViscosityFK_member_sizes[];

extern const char *MaterialConst_ViscosityFK_member_names[];

/* prototypes */
void MaterialConst_ViscosityFKGetField_eta0(MaterialConst_ViscosityFK *point,double *data);
void MaterialConst_ViscosityFKGetField_theta(MaterialConst_ViscosityFK *point,double *data);
void MaterialConst_ViscosityFKSetField_eta0(MaterialConst_ViscosityFK *point,double data);
void MaterialConst_ViscosityFKSetField_theta(MaterialConst_ViscosityFK *point,double data);
void MaterialConst_ViscosityFKView(MaterialConst_ViscosityFK *point);
void MaterialConst_ViscosityFKVTKWriteAsciiAllFields(FILE *vtk_fp,const int N,const MaterialConst_ViscosityFK points[]);
void MaterialConst_ViscosityFKPVTUWriteAllPPointDataFields(FILE *vtk_fp);
void MaterialConst_ViscosityFKVTKWriteBinaryAppendedHeaderAllFields(FILE *vtk_fp,int *offset,const int N,const MaterialConst_ViscosityFK points[]);
void MaterialConst_ViscosityFKVTKWriteBinaryAppendedDataAllFields(FILE *vtk_fp,const int N,const MaterialConst_ViscosityFK points[]);

#endif
