
/*
  Auto generated by version 0.0 of swarm_class_generator.py
  on les-MacBook-Pro.local, at 2013-01-28 12:41:37.374727 by laetitia
*/


#ifndef __MaterialConst_ViscosityZ_DEF_H__
#define __MaterialConst_ViscosityZ_DEF_H__

typedef struct {
  double eta0 ;
  double zeta ;
  double zref ;
} MaterialConst_ViscosityZ ;


typedef enum {
  ViscZ_eta0 = 0,
  ViscZ_zeta,
  ViscZ_zref
} MaterialConst_ViscosityZTypeName ;


extern const char MaterialConst_ViscosityZ_classname[];

extern const int MaterialConst_ViscosityZ_nmembers;

extern const size_t MaterialConst_ViscosityZ_member_sizes[];

extern const char *MaterialConst_ViscosityZ_member_names[];

/* prototypes */
void MaterialConst_ViscosityZGetField_eta0(MaterialConst_ViscosityZ *point,double *data);
void MaterialConst_ViscosityZGetField_zeta(MaterialConst_ViscosityZ *point,double *data);
void MaterialConst_ViscosityZGetField_zref(MaterialConst_ViscosityZ *point,double *data);
void MaterialConst_ViscosityZSetField_eta0(MaterialConst_ViscosityZ *point,double data);
void MaterialConst_ViscosityZSetField_zeta(MaterialConst_ViscosityZ *point,double data);
void MaterialConst_ViscosityZSetField_zref(MaterialConst_ViscosityZ *point,double data);
void MaterialConst_ViscosityZView(MaterialConst_ViscosityZ *point);
void MaterialConst_ViscosityZVTKWriteAsciiAllFields(FILE *vtk_fp,const int N,const MaterialConst_ViscosityZ points[]);
void MaterialConst_ViscosityZPVTUWriteAllPPointDataFields(FILE *vtk_fp);
void MaterialConst_ViscosityZVTKWriteBinaryAppendedHeaderAllFields(FILE *vtk_fp,int *offset,const int N,const MaterialConst_ViscosityZ points[]);
void MaterialConst_ViscosityZVTKWriteBinaryAppendedDataAllFields(FILE *vtk_fp,const int N,const MaterialConst_ViscosityZ points[]);

#endif
